//----------------------------------------------------------------------------------------
// patterns & practices - Smart Client Software Factory - Guidance Package
//
// This file was generated by the "Add View" recipe.
//
// This class is the concrete implementation of a View in the Model-View-Presenter 
// pattern. Communication between the Presenter and this class is acheived through 
// an interface to facilitate separation and testability.
// Note that the Presenter generated by the same recipe, will automatically be created
// by CAB through [CreateNew] and bidirectional references will be added.
//
// For more information see:
// ms-help://MS.VSCC.v90/MS.VSIPCC.v90/ms.practices.scsf.2008apr/SCSF/html/02-09-010-ModelViewPresenter_MVP.htm
//
// Latest version of this Guidance Package: http://go.microsoft.com/fwlink/?LinkId=62182
//----------------------------------------------------------------------------------------

using System;
using System.Windows.Forms;
using Microsoft.Practices.CompositeUI.SmartParts;
using Microsoft.Practices.ObjectBuilder;
using FakeOReal.Infrastructure.Interface;
using Microsoft.Practices.CompositeUI.EventBroker;
using FakeOReal.ImageAnalysis.Constants;
using FakeOReal.ImageAnalysis.Interface;

namespace FakeOReal.ImageAnalysis
{
    public partial class AParamView : UserControl, IAParamView
    {
        [EventPublication(EventTopicNames.SetAParam, PublicationScope.Global)]
        public event EventHandler<FakeOReal.ImageAnalysis.Interface.SetAParam> SetAParams;     
    
        public AParamView()
        {
            InitializeComponent();
        }

        protected override void OnLoad(EventArgs e)
        {
            _presenter.OnViewReady();
            base.OnLoad(e);
        }

        private void button2_Click(object sender, EventArgs e)
        {
            OnSetAParam(new SetAParam(trackBar1.Value, trackBar2.Value, trackBar3.Value));            
        }

        private void button3_Click(object sender, EventArgs e)
        {
            OnSetAParam(new SetAParam(trackBar1.Value, trackBar2.Value, trackBar3.Value));            
        }

        private void button1_Click(object sender, EventArgs e)
        {
            OnSetAParam(new SetAParam(trackBar1.Value, trackBar2.Value, trackBar3.Value));            
        }

        protected virtual void OnSetAParam(SetAParam eventArgs)
        {
            if (SetAParams != null)
            {                
                SetAParams(this, eventArgs);
            }
        }

        private void param3_Click(object sender, EventArgs e)
        {

        }

        private void trackBar3_Scroll(object sender, EventArgs e)
        {

        }

        private void trackBar2_Scroll(object sender, EventArgs e)
        {

        }

        private void param2_Click(object sender, EventArgs e)
        {

        }

        private void param1_Click(object sender, EventArgs e)
        {

        }

        private void trackBar1_Scroll(object sender, EventArgs e)
        {

        }

       
    }
}

